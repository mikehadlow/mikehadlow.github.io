<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Mike Hadlow</title><link>https://mikehadlow.com/posts/</link><description>Recent content in Posts on Mike Hadlow</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 20 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://mikehadlow.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Microsoft.Extensions.DependencyInjection object graph writer</title><link>https://mikehadlow.com/posts/service-collection-object-graph-writer/</link><pubDate>Tue, 20 Jul 2021 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/service-collection-object-graph-writer/</guid><description>&lt;p>It&amp;rsquo;s very useful sometimes to be able to quickly view the object graph created by a dependency injection (or IoC) container, especially when you&amp;rsquo;re a new starter on an existing project. I was recently attempting to get up to speed on a .NET Core project, but I couldn&amp;rsquo;t find anything that would output an object graph from the &lt;code>Microsoft.Extensions.DependencyInjection&lt;/code> &lt;code>IServiceCollection&lt;/code>, so I wrote a simple class that reads the graph and outputs a basic representation. I&amp;rsquo;m sharing it here for my own benefit, but also as a starting point if anyone else needs something similar.&lt;/p></description></item><item><title>A Simple Console Periodic Loop in C#</title><link>https://mikehadlow.com/posts/simple-console-loop/</link><pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/simple-console-loop/</guid><description>&lt;p>I found myself writing the same code several times for a simple console periodic loop, so I&amp;rsquo;m posting the framework here mainly for my own benefit. This uses C# 7&amp;rsquo;s new async Main entry point and avoids the need to spawn a new thread for the loop. Worth noting though that each iteration after the &lt;code>Task.Delay&lt;/code> will run on a threadpool thread.&lt;/p></description></item><item><title>Welcome To My New Blog</title><link>https://mikehadlow.com/posts/welcome-to-my-new-blog/</link><pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/welcome-to-my-new-blog/</guid><description>&lt;p>I&amp;rsquo;ve been blogging since 2005 and have written hundreds of posts in that time, but my blogging output has declined somewhat over the last few years. That&amp;rsquo;s partly laziness on my part, and partly because Twitter provides a much more convenient platform for the quick take, but it&amp;rsquo;s also because there&amp;rsquo;s too much friction in publishing a post on my long running &lt;a href="https://www.blogger.com/about/">Google Blogger&lt;/a> site &lt;a href="https://mikehadlow.blogspot.com/">Code Rant&lt;/a>. Google has done little to update the ancient Blogspot platform over the years and it&amp;rsquo;s showing its age. The effort required to upload and format a blog post is too high, and has effectively disincentivised me from blogging. In the last few years I&amp;rsquo;ve sometimes managed just a single post per year. So, long overdue, I&amp;rsquo;ve decided to start a new blog here at &lt;strong>mikehadlow.com&lt;/strong> using modern developer platform technologies. This is the first post.&lt;/p></description></item></channel></rss>