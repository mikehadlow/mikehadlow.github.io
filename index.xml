<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mike Hadlow</title><link>https://mikehadlow.com/</link><description>Recent content on Mike Hadlow</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 09 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://mikehadlow.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Syncing a Google Docs Spreadsheet to a GitHub Hosted Blog</title><link>https://mikehadlow.com/posts/2025-05-09-simple-script-for-a-book-review-blog/</link><pubDate>Fri, 09 May 2025 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/2025-05-09-simple-script-for-a-book-review-blog/</guid><description>&lt;p>Blah&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// A Google Apps Script to sync book reviews stored in a Google Docs spreadsheet
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// with a Hugo/Markdown based review blog
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// GitHub PAT for API access to the repo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">GITHUB_TOKEN&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;the-github-pat&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Path to the repo in GitHub
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">REPO_PATH&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;joeblogs/bookreviews&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Name of the sheet
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">SHEET_NAME&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Sheet1&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// The ID of the folder containing book images
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">FOLDER_ID&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;the-spreadsheet-id&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">MAIN_BRANCH&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;main&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// The column layout in the spreadsheet
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">col&lt;/span> &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">category&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">slug&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">author&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">title&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">subtitle&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">started&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">completed&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">review&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// The template for the review front-matter
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">template&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">`+++
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">title = &amp;#34;{{title}}&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">description = &amp;#34;{{subtitle}}&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">date = {{completed}}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">author = &amp;#34;Mike Hadlow&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">[params]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> image = &amp;#34;{{image}}&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> category = &amp;#34;{{category}}&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> book-author = &amp;#34;{{author}}&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> started = &amp;#34;{{started}}&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> completed = &amp;#34;{{completed}}&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> tags = [&amp;#34;book&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">+++
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">{{review}}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">`&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Starting sync!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">ss&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">SpreadsheetApp&lt;/span>.&lt;span style="color:#a6e22e">getActiveSpreadsheet&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">sheet&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">ss&lt;/span>.&lt;span style="color:#a6e22e">getSheetByName&lt;/span>(&lt;span style="color:#a6e22e">SHEET_NAME&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">sheet&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Logger&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Sheet not found: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">SHEET_NAME&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">sheet&lt;/span>.&lt;span style="color:#a6e22e">getDataRange&lt;/span>().&lt;span style="color:#a6e22e">getValues&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;data.length&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">data&lt;/span>.&lt;span style="color:#a6e22e">length&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// iterate through the rows (reviews) in the sheet looking for any
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// that have a &amp;#39;slug&amp;#39; set.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span>(&lt;span style="color:#a6e22e">item&lt;/span> &lt;span style="color:#66d9ef">of&lt;/span> &lt;span style="color:#a6e22e">data&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">slug&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">item&lt;/span>[&lt;span style="color:#a6e22e">col&lt;/span>.&lt;span style="color:#a6e22e">slug&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">slug&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a6e22e">slug&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Slug&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">started&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Date(&lt;span style="color:#a6e22e">item&lt;/span>[&lt;span style="color:#a6e22e">col&lt;/span>.&lt;span style="color:#a6e22e">started&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">completed&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Date(&lt;span style="color:#a6e22e">item&lt;/span>[&lt;span style="color:#a6e22e">col&lt;/span>.&lt;span style="color:#a6e22e">completed&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">image&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">`/img/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">slug&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.jpg`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">title&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">item&lt;/span>[&lt;span style="color:#a6e22e">col&lt;/span>.&lt;span style="color:#a6e22e">title&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// populate the template
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">markdown&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">template&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">replaceAll&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;{{image}}&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">image&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">replaceAll&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;{{category}}&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">item&lt;/span>[&lt;span style="color:#a6e22e">col&lt;/span>.&lt;span style="color:#a6e22e">category&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">replaceAll&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;{{slug}}&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">slug&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">replaceAll&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;{{author}}&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">item&lt;/span>[&lt;span style="color:#a6e22e">col&lt;/span>.&lt;span style="color:#a6e22e">author&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">replaceAll&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;{{title}}&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">title&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">replaceAll&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;{{subtitle}}&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">item&lt;/span>[&lt;span style="color:#a6e22e">col&lt;/span>.&lt;span style="color:#a6e22e">subtitle&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">replaceAll&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;{{started}}&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">started&lt;/span>.&lt;span style="color:#a6e22e">toISOString&lt;/span>().&lt;span style="color:#a6e22e">substring&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">10&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">replaceAll&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;{{completed}}&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">completed&lt;/span>.&lt;span style="color:#a6e22e">toISOString&lt;/span>().&lt;span style="color:#a6e22e">substring&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">10&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">replaceAll&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;{{review}}&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">item&lt;/span>[&lt;span style="color:#a6e22e">col&lt;/span>.&lt;span style="color:#a6e22e">review&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#a6e22e">markdown&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">pushPostToGitHub&lt;/span>(&lt;span style="color:#a6e22e">slug&lt;/span>, &lt;span style="color:#a6e22e">completed&lt;/span>, &lt;span style="color:#a6e22e">markdown&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">pushPhotoToGithub&lt;/span>(&lt;span style="color:#a6e22e">slug&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">pushPostToGitHub&lt;/span>(&lt;span style="color:#a6e22e">slug&lt;/span>, &lt;span style="color:#a6e22e">completed&lt;/span>, &lt;span style="color:#a6e22e">markdown&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">filename&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">`&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">completed&lt;/span>.&lt;span style="color:#a6e22e">toISOString&lt;/span>().&lt;span style="color:#a6e22e">substring&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">10&lt;/span>)&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">-&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">slug&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.md`&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">message&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">`Add new book review: &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">slug&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">content&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">Utilities&lt;/span>.&lt;span style="color:#a6e22e">base64Encode&lt;/span>(&lt;span style="color:#a6e22e">markdown&lt;/span>, &lt;span style="color:#a6e22e">Utilities&lt;/span>.&lt;span style="color:#a6e22e">Charset&lt;/span>.&lt;span style="color:#a6e22e">UTF_8&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">pushToGitHub&lt;/span>(&lt;span style="color:#a6e22e">filename&lt;/span>, &lt;span style="color:#a6e22e">content&lt;/span>, &lt;span style="color:#a6e22e">message&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;post&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">pushPhotoToGithub&lt;/span>(&lt;span style="color:#a6e22e">slug&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">filename&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">`&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">slug&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.jpg`&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">folder&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">DriveApp&lt;/span>.&lt;span style="color:#a6e22e">getFolderById&lt;/span>(&lt;span style="color:#a6e22e">FOLDER_ID&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">files&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">folder&lt;/span>.&lt;span style="color:#a6e22e">getFilesByName&lt;/span>(&lt;span style="color:#a6e22e">filename&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">files&lt;/span>.&lt;span style="color:#a6e22e">hasNext&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">file&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">files&lt;/span>.&lt;span style="color:#a6e22e">next&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">fileBlob&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">file&lt;/span>.&lt;span style="color:#a6e22e">getBlob&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">`Found file: &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">filename&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> (ID: &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">file&lt;/span>.&lt;span style="color:#a6e22e">getId&lt;/span>()&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">)`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">content&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">Utilities&lt;/span>.&lt;span style="color:#a6e22e">base64Encode&lt;/span>(&lt;span style="color:#a6e22e">fileBlob&lt;/span>.&lt;span style="color:#a6e22e">getBytes&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">message&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">`Add img for book review: &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">filename&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">pushToGitHub&lt;/span>(&lt;span style="color:#a6e22e">filename&lt;/span>, &lt;span style="color:#a6e22e">content&lt;/span>, &lt;span style="color:#a6e22e">message&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;img&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">`Photo not found: &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">filename&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">pushToGitHub&lt;/span>(&lt;span style="color:#a6e22e">filename&lt;/span>, &lt;span style="color:#a6e22e">content&lt;/span>, &lt;span style="color:#a6e22e">message&lt;/span>, &lt;span style="color:#a6e22e">type&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#a6e22e">type&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#e6db74">&amp;#34;post&amp;#34;&lt;/span>) &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#e6db74">&amp;#34;content/posts&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">:&lt;/span> (&lt;span style="color:#a6e22e">type&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#e6db74">&amp;#34;img&amp;#34;&lt;/span>) &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#e6db74">&amp;#34;static/img&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">path&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Error(&lt;span style="color:#e6db74">`Unknown pushToGithub type: &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">apiUrl&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">`https://api.github.com/repos/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">REPO_PATH&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/contents/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">path&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">filename&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">payload&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">JSON&lt;/span>.&lt;span style="color:#a6e22e">stringify&lt;/span>({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">message&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">content&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">branch&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">MAIN_BRANCH&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">headers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Authorization&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">`token &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">GITHUB_TOKEN&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;application/json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">putOptions&lt;/span> &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">method&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;put&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">headers&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">payload&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">getOptions&lt;/span> &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">method&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;get&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">headers&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Return if the file exists
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">getResponse&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">UrlFetchApp&lt;/span>.&lt;span style="color:#a6e22e">fetch&lt;/span>(&lt;span style="color:#a6e22e">apiUrl&lt;/span>, &lt;span style="color:#a6e22e">getOptions&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">status&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">getResponse&lt;/span>.&lt;span style="color:#a6e22e">getResponseCode&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">status&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#ae81ff">404&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">`File already exists: &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">status&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">filename&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (&lt;span style="color:#a6e22e">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">`File &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">filename&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">, not found, safe to proceed with push.`&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// add the file to the repository
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">UrlFetchApp&lt;/span>.&lt;span style="color:#a6e22e">fetch&lt;/span>(&lt;span style="color:#a6e22e">apiUrl&lt;/span>, &lt;span style="color:#a6e22e">putOptions&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">responseCode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">response&lt;/span>.&lt;span style="color:#a6e22e">getResponseCode&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">responseText&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">response&lt;/span>.&lt;span style="color:#a6e22e">getContentText&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">responseCode&lt;/span> &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">200&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a6e22e">responseCode&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">300&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Logger&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">`Successfully pushed file: &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">filename&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Logger&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">`Error pushing file (&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">filename&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">): &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">responseCode&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> - &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">responseText&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (&lt;span style="color:#a6e22e">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Logger&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Error pushing to GitHub: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">error&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>About</title><link>https://mikehadlow.com/top/about/</link><pubDate>Wed, 30 Apr 2025 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/top/about/</guid><description>&lt;p>&lt;img src="https://mikehadlow.com/img/mike.jpg" alt="Mike">&lt;/p>
&lt;p>Hello! I am Mike Hadlow. I am a software engineer, based in the UK. I&amp;rsquo;ve been building software professionally for over 20 years. The majority of my career was with Microsoft development tools and technologies and since 2002 primarily with .NET. But for the last 3 years I&amp;rsquo;ve been working mostly with Node and TypeScript (and a little bit of Elm). During that time I&amp;rsquo;ve worked on a large range of projects in many different industries, ranging from finance and insurance to the music business. I&amp;rsquo;ve specialized in large scale software development and focussed particularly on distributed event driven architectures. I&amp;rsquo;ve worked on diverse platforms including on-premise, Kubernetes, and AWS serverless. My role has varied from software developer to chief software architect along with a small number of non-coding consultancy engagements.&lt;/p></description></item><item><title>Book Review: D3 Start To Finish by Peter Cook</title><link>https://mikehadlow.com/posts/2022-06-28-d3-start-to-finish/</link><pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/2022-06-28-d3-start-to-finish/</guid><description>&lt;p>This is my review of &lt;a href="https://www.createwithdata.com/d3-start-to-finish-book/">D3 Start to Finish&lt;/a> by &lt;a href="https://www.peterrcook.com/">Peter Cook&lt;/a>. Peter is a well known author and educator in the world of data visualisation as well as being an in-demand software developer. This is his introductory tutorial to &lt;a href="https://d3js.org/">D3&lt;/a>, a Javascript library used primarily for targetting &lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG">SVG&lt;/a> for browser native data visualisations. D3 is a very powerful tool, as a quick browse of the &lt;a href="https://d3js.org/">website&lt;/a> will demonstrate. This book evolved from Peter&amp;rsquo;s courses on D3 and aims to teach you all you need to know to produce professional D3 based data visualisations.&lt;/p></description></item><item><title>Writing .NET Application Services for Kubernetes</title><link>https://mikehadlow.com/posts/2022-06-24-writing-dotnet-services-for-kubernetes/</link><pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/2022-06-24-writing-dotnet-services-for-kubernetes/</guid><description>&lt;p>In a traditional .NET distributed application, application services (not to be confused with the Kubernetes &amp;lsquo;service&amp;rsquo; object) would either be written as IIS hosted web applications or Windows Services. When building .NET (micro)services to be deployed in a &lt;a href="https://kubernetes.io/">Kubernetes&lt;/a> cluster pretty much every facet of the service needs to be reconsidered, not only the hosting environment but the way configuration is accessed, how logging and monitoring work, and the options for state management and memory considerations. In this post I&amp;rsquo;ll bring my experience of migrating .NET applications to Kubernetes to enumerate some of the main ways that you&amp;rsquo;ll need to change the way you write them.&lt;/p></description></item><item><title>Book Review: Team Topologies by Skelton and Pais</title><link>https://mikehadlow.com/posts/2022-04-29-team-topologies/</link><pubDate>Fri, 29 Apr 2022 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/2022-04-29-team-topologies/</guid><description>&lt;p>This is my book review of &lt;a href="https://teamtopologies.com/">Team Topologies&lt;/a> by Matthew Skelton and Manuel Pais.&lt;/p>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Conway%27s_law">Conway&amp;rsquo;s Law&lt;/a>, coined by computer scientist Melvin Conway states:&lt;/p>
&lt;blockquote>
&lt;p>Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization&amp;rsquo;s communication structure.&lt;/p>&lt;/blockquote>
&lt;p>This book is a distillation of Skelton and Pais&amp;rsquo;s experiences helping teams execute the &amp;ldquo;reverse Conway maneuver&amp;rdquo;; using the insight of Conway&amp;rsquo;s law to structure teams more effectively for software delivery. They present a framework and taxonomy for thinking about teams and their interactions that is immensely helpful for anyone tasked with creating a software organization.&lt;/p></description></item><item><title>C#: Add event handlers dynamically using reflection</title><link>https://mikehadlow.com/posts/2022-04-28-event-handlers-by-reflection/</link><pubDate>Thu, 28 Apr 2022 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/2022-04-28-event-handlers-by-reflection/</guid><description>&lt;p>Recently I had a situation where I needed to test a class with dozens of event handlers. Rather than manually write the repetitive code to attach the handlers I decided to cheat and use reflection. Since there wasn&amp;rsquo;t anything immediately available online that I could find, I&amp;rsquo;m sharing an example here to show how to do it.&lt;/p></description></item><item><title>Book Review: Code That Fits In Your Head by Mark Seeman</title><link>https://mikehadlow.com/posts/2022-03-22-code-that-fits-in-your-head/</link><pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/2022-03-22-code-that-fits-in-your-head/</guid><description>&lt;p>This is my review of &lt;a href="https://blog.ploeh.dk/">Mark Seemann&amp;rsquo;s&lt;/a> new book, &lt;a href="https://www.amazon.co.uk/Code-That-Fits-Your-Head/dp/0137464401">Code That Fits In Your Head - Heuristics for Software Engineering&lt;/a> .&lt;/p></description></item><item><title>How to use Google.Protobuf without code generation in C#</title><link>https://mikehadlow.com/posts/2022-03-18-use-google-protobuf-without-code-generation/</link><pubDate>Fri, 18 Mar 2022 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/2022-03-18-use-google-protobuf-without-code-generation/</guid><description>&lt;p>The &lt;a href="https://www.nuget.org/packages/Google.Protobuf/">&lt;code>Google.Protobuf&lt;/code>&lt;/a> NuGet package is the recommended &lt;a href="https://developers.google.com/protocol-buffers">protobuf&lt;/a> serializer for .NET. The documented way of using it is to code gen both C# models and serializers from &lt;code>.proto&lt;/code> files using the &lt;code>protoc&lt;/code> tool. However, sometimes it&amp;rsquo;s more convenient to do serialization/deserialization on an ad-hoc basis without code generation. The &lt;code>Google.Protobuf&lt;/code> NuGet package provides APIs to do this, but they are poorly documented. This post gives a code example for a simple &amp;ldquo;no-code-gen&amp;rdquo; serializer.&lt;/p></description></item><item><title>Blocking XREAD From A Redis Stream Using StackExchange.Redis</title><link>https://mikehadlow.com/posts/2022-02-18-xread-from-a-redis-stream-using-stackexchange-redis/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/2022-02-18-xread-from-a-redis-stream-using-stackexchange-redis/</guid><description>&lt;p>The &lt;a href="https://github.com/StackExchange/StackExchange.Redis">StackExchange.Redis&lt;/a> NuGet package is the most popular .NET client for &lt;a href="https://redis.io/">Redis&lt;/a>. It&amp;rsquo;s stable, high-performance, with a great community and wide usage. One of it&amp;rsquo;s most interesting features is the way it does network &lt;a href="https://stackexchange.github.io/StackExchange.Redis/PipelinesMultiplexers.html#multiplexing">multiplexing&lt;/a>. This allows multi-threaded applications to use a single TCP/IP connection without blocking. Unfortunately this also means that the library does not support blocking operations such as &lt;code>XREAD BLOCK&lt;/code>, which is important if you want to leverage &lt;a href="https://redis.io/topics/streams-intro">Redis Streams&lt;/a> on .NET. This post offers a work-around for this.&lt;/p></description></item><item><title>Large Numbers of Bindings With RabbitMQ</title><link>https://mikehadlow.com/posts/2021-08-19-large-numbers-of-bindings-with-rabbitmq/</link><pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/2021-08-19-large-numbers-of-bindings-with-rabbitmq/</guid><description>&lt;p>RabbitMQ (or more specifically the AMQP protocol) provides a degree of flexibility over other message-queue solutions with its exchange-binding-queue model. Some possible solutions to scaling or business issues result in large numbers of bindings being created, perhaps thousands per queue. We tested RabbitMQ to find out what the binding performance limits were and present the results in this post. It seems that large numbers of bindings are not in themselves a performance issue, but on a RabbitMQ cluster, &amp;ldquo;binding churn&amp;rdquo; the rate at which they are created and destroyed can have a large impact on message delivery and because bindings can take time to propagate through the cluster there is the possibility of message loss.&lt;/p></description></item><item><title>Register a Microsoft.Extensions.Logging.ILoggerProvider with EasyNetQ</title><link>https://mikehadlow.com/posts/2021-08-13-easynetq-iloggerprovider/</link><pubDate>Fri, 13 Aug 2021 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/2021-08-13-easynetq-iloggerprovider/</guid><description>&lt;p>&lt;a href="https://easynetq.com/">EasyNetQ&lt;/a> is an opinionated fully featured client API for &lt;a href="https://www.rabbitmq.com/">RabbitMQ&lt;/a>. It provides extensive diagnostic logging capabilities via &lt;a href="https://github.com/damianh/LibLog">LibLog&lt;/a> a logging abstraction that provides support for many common logging libraries. Unfortuntely LigLog doesn&amp;rsquo;t support &lt;code>Microsoft.Extensions.Logging&lt;/code>, but this post provides an adaptor, &lt;code>EasyNetQMicrosoftExtensionsLogProvider&lt;/code> that will allow EasyNetQ to log to a &lt;code>Microsoft.Extensions.Logging.ILoggerProvider&lt;/code>.&lt;/p></description></item><item><title>How to create a standalone ConsoleLoggerProvider</title><link>https://mikehadlow.com/posts/2021-07-21-standalone-consoleloggerprovider/</link><pubDate>Tue, 27 Jul 2021 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/2021-07-21-standalone-consoleloggerprovider/</guid><description>&lt;p>If, for whatever reason you want to create a stand alone instance of &lt;code>ConsoleLoggerProvider&lt;/code> without having to leverage dependency injection and the full Hosting framework, you&amp;rsquo;ll find that the &lt;code>ConsoleLoggerProvider&lt;/code>&amp;rsquo;s constructor requires an instance of an &lt;code>IOptionsMonitor&amp;lt;T&amp;gt;&lt;/code>, the only instance of which &lt;code>OptionsMonitor&amp;lt;T&amp;gt;&lt;/code> in turn has a complex constructor with many dependencies. This all seems like a failure of design on Microsoft&amp;rsquo;s part. Here I give a simple no-op &lt;code>IOptionsMonitor&amp;lt;T&amp;gt;&lt;/code> implementation to allow one to easily create a &lt;code>ConsoleLoggerProvider&lt;/code>.&lt;/p></description></item><item><title>Microsoft.Extensions.DependencyInjection object graph writer</title><link>https://mikehadlow.com/posts/2021-07-20-service-collection-object-graph-writer/</link><pubDate>Tue, 20 Jul 2021 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/2021-07-20-service-collection-object-graph-writer/</guid><description>&lt;p>It&amp;rsquo;s very useful sometimes to be able to quickly view the object graph created by a dependency injection (or IoC) container, especially when you&amp;rsquo;re a new starter on an existing project. I was recently attempting to get up to speed on a .NET Core project, but I couldn&amp;rsquo;t find anything that would output an object graph from the &lt;code>Microsoft.Extensions.DependencyInjection&lt;/code> &lt;code>IServiceCollection&lt;/code>, so I wrote a simple class that reads the graph and outputs a basic representation. I&amp;rsquo;m sharing it here for my own benefit, but also as a starting point if anyone else needs something similar.&lt;/p></description></item><item><title>A Simple Console Periodic Loop in C#</title><link>https://mikehadlow.com/posts/2021-07-09-simple-console-loop/</link><pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/2021-07-09-simple-console-loop/</guid><description>&lt;p>I found myself writing the same code several times for a simple console periodic loop, so I&amp;rsquo;m posting the framework here mainly for my own benefit. This uses C# 7&amp;rsquo;s new async Main entry point and avoids the need to spawn a new thread for the loop. Worth noting though that each iteration after the &lt;code>Task.Delay&lt;/code> will run on a threadpool thread.&lt;/p></description></item><item><title>Contact</title><link>https://mikehadlow.com/top/contact/</link><pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/top/contact/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Service&lt;/th>
 &lt;th>Address&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Email&lt;/td>
 &lt;td>&lt;a href="mailto:mike@suteki.co.uk">mike@suteki.co.uk&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>BlueSky&lt;/td>
 &lt;td>&lt;a href="https://bsky.app/profile/mikehadlow.com">@mikehadlow.com&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>GitHub&lt;/td>
 &lt;td>&lt;a href="https://github.com/mikehadlow">@mikehadlow&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Welcome To My New Blog</title><link>https://mikehadlow.com/posts/2021-07-06-welcome-to-my-new-blog/</link><pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate><guid>https://mikehadlow.com/posts/2021-07-06-welcome-to-my-new-blog/</guid><description>&lt;p>I&amp;rsquo;ve been blogging since 2005 and have written hundreds of posts in that time, but my blogging output has declined somewhat over the last few years. That&amp;rsquo;s partly laziness on my part, and partly because Twitter provides a much more convenient platform for the quick take, but it&amp;rsquo;s also because there&amp;rsquo;s too much friction in publishing a post on my long running &lt;a href="https://www.blogger.com/about/">Google Blogger&lt;/a> site &lt;a href="https://mikehadlow.blogspot.com/">Code Rant&lt;/a>. Google has done little to update the ancient Blogspot platform over the years and it&amp;rsquo;s showing its age. The effort required to upload and format a blog post is too high, and has effectively disincentivised me from blogging. In the last few years I&amp;rsquo;ve sometimes managed just a single post per year. So, long overdue, I&amp;rsquo;ve decided to start a new blog here at &lt;strong>mikehadlow.com&lt;/strong> using modern developer platform technologies. This is the first post.&lt;/p></description></item></channel></rss>